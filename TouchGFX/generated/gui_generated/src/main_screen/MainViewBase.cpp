/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainViewBase::MainViewBase() :
    flexButtonCallback(this, &MainViewBase::flexButtonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    main_bg.setXY(0, 0);
    main_bg.setBitmap(touchgfx::Bitmap(BITMAP_MAIN_BG_IMAGE_ID));
    add(main_bg);

    ornament_right.setXY(170, 191);
    ornament_right.setBitmap(touchgfx::Bitmap(BITMAP_RIGHT_ORNAMENT_ID));
    add(ornament_right);

    ornament_left.setXY(11, 191);
    ornament_left.setBitmap(touchgfx::Bitmap(BITMAP_LEFT_ORNAMENT_ID));
    add(ornament_left);

    arrow_down.setXY(105, 222);
    arrow_down.setBitmap(touchgfx::Bitmap(BITMAP_ARROW_DOWN_NORMAL_ID));
    add(arrow_down);

    arrow_up.setXY(105, 95);
    arrow_up.setBitmap(touchgfx::Bitmap(BITMAP_ARROW_UP_NORMAL_ID));
    add(arrow_up);

    arrowDownFlexButton.setBoxWithBorderPosition(0, 0, 0, 0);
    arrowDownFlexButton.setBorderSize(5);
    arrowDownFlexButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    arrowDownFlexButton.setAction(flexButtonCallback);
    arrowDownFlexButton.setPosition(105, 222, 32, 20);
    add(arrowDownFlexButton);

    arrowUpFlexButton.setBoxWithBorderPosition(0, 0, 0, 0);
    arrowUpFlexButton.setBorderSize(5);
    arrowUpFlexButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    arrowUpFlexButton.setAction(flexButtonCallback);
    arrowUpFlexButton.setPosition(105, 95, 32, 20);
    add(arrowUpFlexButton);

    iconDegree.setXY(185, 121);
    iconDegree.setBitmap(touchgfx::Bitmap(BITMAP_DEGREE_BIG_ID));
    add(iconDegree);

    containerMainTopMenu.setPosition(0, 33, 240, 44);
    iconTimer.setXY(16, 0);
    iconTimer.setBitmap(touchgfx::Bitmap(BITMAP_ICON_SMALL_TIMER_NORMAL_ID));
    containerMainTopMenu.add(iconTimer);

    textTimer.setXY(13, 32);
    textTimer.setColor(touchgfx::Color::getColorFromRGB(255, 179, 104));
    textTimer.setLinespacing(0);
    textTimer.setTypedText(touchgfx::TypedText(T_ICON_TIMER));
    containerMainTopMenu.add(textTimer);

    iconBoost.setXY(63, 0);
    iconBoost.setBitmap(touchgfx::Bitmap(BITMAP_ICON_SMALL_BOOST_NORMAL_ID));
    containerMainTopMenu.add(iconBoost);

    textBoost.setXY(58, 32);
    textBoost.setColor(touchgfx::Color::getColorFromRGB(255, 179, 104));
    textBoost.setLinespacing(0);
    textBoost.setTypedText(touchgfx::TypedText(T_ICON_BOOST));
    containerMainTopMenu.add(textBoost);

    iconEco.setXY(107, 0);
    iconEco.setBitmap(touchgfx::Bitmap(BITMAP_ICON_SMALL_ECO_NORMAL_ID));
    containerMainTopMenu.add(iconEco);

    textEco.setXY(110, 32);
    textEco.setColor(touchgfx::Color::getColorFromRGB(255, 179, 104));
    textEco.setLinespacing(0);
    textEco.setTypedText(touchgfx::TypedText(T_ICON_ECO));
    containerMainTopMenu.add(textEco);

    iconSilent.setXY(151, 0);
    iconSilent.setBitmap(touchgfx::Bitmap(BITMAP_ICON_SMALL_SILENT_NORMAL_ID));
    containerMainTopMenu.add(iconSilent);

    textSilent.setXY(145, 32);
    textSilent.setColor(touchgfx::Color::getColorFromRGB(255, 179, 104));
    textSilent.setLinespacing(0);
    textSilent.setTypedText(touchgfx::TypedText(T_ICON_SILENT));
    containerMainTopMenu.add(textSilent);

    iconAngle.setXY(195, 0);
    iconAngle.setBitmap(touchgfx::Bitmap(BITMAP_ICON_SMALL_ANGLE_NORMAL_ID));
    containerMainTopMenu.add(iconAngle);

    textAngle.setXY(192, 32);
    textAngle.setColor(touchgfx::Color::getColorFromRGB(255, 179, 104));
    textAngle.setLinespacing(0);
    textAngle.setTypedText(touchgfx::TypedText(T_ICON_ANGLE));
    containerMainTopMenu.add(textAngle);

    add(containerMainTopMenu);

    containerBottomMenu.setPosition(0, 252, 240, 68);
    background_menu_bottom_mode.setXY(0, 0);
    background_menu_bottom_mode.setBitmap(touchgfx::Bitmap(BITMAP_MENU_BUTTOM_NORMAL_ID));
    containerBottomMenu.add(background_menu_bottom_mode);

    background_menu_bottom_plan.setXY(60, 0);
    background_menu_bottom_plan.setBitmap(touchgfx::Bitmap(BITMAP_MENU_BUTTOM_NORMAL_ID));
    containerBottomMenu.add(background_menu_bottom_plan);

    background_menu_bottom_timer.setXY(120, 0);
    background_menu_bottom_timer.setBitmap(touchgfx::Bitmap(BITMAP_MENU_BUTTOM_NORMAL_ID));
    containerBottomMenu.add(background_menu_bottom_timer);

    background_menu_bottom_setup.setXY(180, 0);
    background_menu_bottom_setup.setBitmap(touchgfx::Bitmap(BITMAP_MENU_BUTTOM_NORMAL_ID));
    containerBottomMenu.add(background_menu_bottom_setup);

    boxModeSelected.setXY(0, 0);
    boxModeSelected.setBitmap(touchgfx::Bitmap(BITMAP_MENU_BUTTOM_ACTIVE_ID));
    boxModeSelected.setVisible(false);
    containerBottomMenu.add(boxModeSelected);

    menuIconMode.setXY(14, 18);
    menuIconMode.setBitmap(touchgfx::Bitmap(BITMAP_ICON_MODE_NORMAL_ID));
    containerBottomMenu.add(menuIconMode);

    menuIconPlan.setXY(74, 18);
    menuIconPlan.setBitmap(touchgfx::Bitmap(BITMAP_ICON_PLAN_NORMAL_ID));
    containerBottomMenu.add(menuIconPlan);

    menuIconTimer.setXY(134, 18);
    menuIconTimer.setBitmap(touchgfx::Bitmap(BITMAP_ICON_TIMER_NORMAL_ID));
    containerBottomMenu.add(menuIconTimer);

    menuIconSetupFlexButton.setBoxWithBorderPosition(0, 0, 0, 0);
    menuIconSetupFlexButton.setBorderSize(5);
    menuIconSetupFlexButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    menuIconSetupFlexButton.setAction(flexButtonCallback);
    menuIconSetupFlexButton.setPosition(181, 9, 58, 59);
    containerBottomMenu.add(menuIconSetupFlexButton);

    menuIconModeFlexButton.setBoxWithBorderPosition(0, 0, 0, 0);
    menuIconModeFlexButton.setBorderSize(5);
    menuIconModeFlexButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    menuIconModeFlexButton.setAction(flexButtonCallback);
    menuIconModeFlexButton.setPosition(0, 9, 58, 59);
    containerBottomMenu.add(menuIconModeFlexButton);

    menuIconPlanFlexButton.setBoxWithBorderPosition(0, 0, 0, 0);
    menuIconPlanFlexButton.setBorderSize(5);
    menuIconPlanFlexButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    menuIconPlanFlexButton.setAction(flexButtonCallback);
    menuIconPlanFlexButton.setPosition(61, 9, 58, 59);
    containerBottomMenu.add(menuIconPlanFlexButton);

    menuIconTimerFlexButton.setBoxWithBorderPosition(0, 0, 0, 0);
    menuIconTimerFlexButton.setBorderSize(5);
    menuIconTimerFlexButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    menuIconTimerFlexButton.setAction(flexButtonCallback);
    menuIconTimerFlexButton.setPosition(120, 9, 58, 59);
    containerBottomMenu.add(menuIconTimerFlexButton);

    menuIconSetup.setXY(194, 18);
    menuIconSetup.setBitmap(touchgfx::Bitmap(BITMAP_ICON_SETUP_NORMAL_ID));
    containerBottomMenu.add(menuIconSetup);

    textAreaMode.setXY(16, 53);
    textAreaMode.setColor(touchgfx::Color::getColorFromRGB(255, 203, 61));
    textAreaMode.setLinespacing(0);
    textAreaMode.setTypedText(touchgfx::TypedText(T_BUTTON_MODE));
    containerBottomMenu.add(textAreaMode);

    textAreaPlan.setXY(76, 53);
    textAreaPlan.setColor(touchgfx::Color::getColorFromRGB(255, 203, 61));
    textAreaPlan.setLinespacing(0);
    textAreaPlan.setTypedText(touchgfx::TypedText(T_BUTTON_PLAN));
    containerBottomMenu.add(textAreaPlan);

    textAreaTimer.setXY(135, 53);
    textAreaTimer.setColor(touchgfx::Color::getColorFromRGB(255, 203, 61));
    textAreaTimer.setLinespacing(0);
    textAreaTimer.setTypedText(touchgfx::TypedText(T_BUTTON_TIMER));
    containerBottomMenu.add(textAreaTimer);

    textAreaSetup.setXY(194, 53);
    textAreaSetup.setColor(touchgfx::Color::getColorFromRGB(255, 203, 61));
    textAreaSetup.setLinespacing(0);
    textAreaSetup.setTypedText(touchgfx::TypedText(T_BUTTON_SETUP));
    containerBottomMenu.add(textAreaSetup);

    menuDivider_1.setXY(59, 16);
    menuDivider_1.setBitmap(touchgfx::Bitmap(BITMAP_MENU_LINE_ID));
    containerBottomMenu.add(menuDivider_1);

    menuDivider_2.setXY(119, 16);
    menuDivider_2.setBitmap(touchgfx::Bitmap(BITMAP_MENU_LINE_ID));
    containerBottomMenu.add(menuDivider_2);

    menuDivider_3.setXY(179, 16);
    menuDivider_3.setBitmap(touchgfx::Bitmap(BITMAP_MENU_LINE_ID));
    containerBottomMenu.add(menuDivider_3);

    add(containerBottomMenu);

    containerSetTemperature.setPosition(51, 119, 141, 100);
    textAreaShadowSetTemperature.setXY(6, -27);
    textAreaShadowSetTemperature.setColor(touchgfx::Color::getColorFromRGB(150, 0, 4));
    textAreaShadowSetTemperature.setLinespacing(0);
    Unicode::snprintf(textAreaShadowSetTemperatureBuffer, TEXTAREASHADOWSETTEMPERATURE_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID1).getText());
    textAreaShadowSetTemperature.setWildcard(textAreaShadowSetTemperatureBuffer);
    textAreaShadowSetTemperature.resizeToCurrentText();
    textAreaShadowSetTemperature.setTypedText(touchgfx::TypedText(T_SET_TEMP));
    containerSetTemperature.add(textAreaShadowSetTemperature);

    textAreaSetTemperature.setXY(6, -30);
    textAreaSetTemperature.setColor(touchgfx::Color::getColorFromRGB(250, 206, 39));
    textAreaSetTemperature.setLinespacing(0);
    Unicode::snprintf(textAreaSetTemperatureBuffer, TEXTAREASETTEMPERATURE_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID1).getText());
    textAreaSetTemperature.setWildcard(textAreaSetTemperatureBuffer);
    textAreaSetTemperature.resizeToCurrentText();
    textAreaSetTemperature.setTypedText(touchgfx::TypedText(T_SET_TEMP));
    containerSetTemperature.add(textAreaSetTemperature);

    add(containerSetTemperature);

    containerMenu1.setPosition(0, 227, 240, 34);
    containerMenu1.setVisible(false);
    menuBackground1.setXY(0, 0);
    menuBackground1.setBitmap(touchgfx::Bitmap(BITMAP_MENU_BUTTON_NORMAL_ID));
    containerMenu1.add(menuBackground1);

    textAreaMenu1.setPosition(60, 7, 120, 22);
    textAreaMenu1.setColor(touchgfx::Color::getColorFromRGB(150, 0, 4));
    textAreaMenu1.setLinespacing(0);
    textAreaMenu1.setTypedText(touchgfx::TypedText(T_MENU_ECO));
    containerMenu1.add(textAreaMenu1);

    arrowMenu1.setXY(215, 8);
    arrowMenu1.setBitmap(touchgfx::Bitmap(BITMAP_MENU_ARROW_NORMAL_ID));
    arrowMenu1.setVisible(false);
    containerMenu1.add(arrowMenu1);

    iconMenu1.setXY(10, 8);
    iconMenu1.setBitmap(touchgfx::Bitmap(BITMAP_MENU_ICON_ECO_ID));
    containerMenu1.add(iconMenu1);

    menu1FlexButton.setBoxWithBorderPosition(0, 0, 0, 0);
    menu1FlexButton.setBorderSize(5);
    menu1FlexButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    menu1FlexButton.setAction(flexButtonCallback);
    menu1FlexButton.setPosition(0, 0, 240, 34);
    containerMenu1.add(menu1FlexButton);

    add(containerMenu1);

    containerMenu2.setPosition(0, 193, 240, 34);
    containerMenu2.setVisible(false);
    menuBackground2.setXY(0, 0);
    menuBackground2.setBitmap(touchgfx::Bitmap(BITMAP_MENU_BUTTON_NORMAL_ID));
    containerMenu2.add(menuBackground2);

    textAreaMenu2.setPosition(60, 7, 120, 22);
    textAreaMenu2.setColor(touchgfx::Color::getColorFromRGB(150, 0, 4));
    textAreaMenu2.setLinespacing(0);
    textAreaMenu2.setTypedText(touchgfx::TypedText(T_MENU_BOOST));
    containerMenu2.add(textAreaMenu2);

    arrowMenu2.setXY(215, 9);
    arrowMenu2.setBitmap(touchgfx::Bitmap(BITMAP_MENU_ARROW_NORMAL_ID));
    arrowMenu2.setVisible(false);
    containerMenu2.add(arrowMenu2);

    iconMenu2.setXY(10, 9);
    iconMenu2.setBitmap(touchgfx::Bitmap(BITMAP_MENU_ICON_BOOST_ID));
    containerMenu2.add(iconMenu2);

    menu2FlexButton.setBoxWithBorderPosition(0, 0, 0, 0);
    menu2FlexButton.setBorderSize(5);
    menu2FlexButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    menu2FlexButton.setAction(flexButtonCallback);
    menu2FlexButton.setPosition(0, 0, 240, 34);
    containerMenu2.add(menu2FlexButton);

    add(containerMenu2);

    containerMenu3.setPosition(0, 159, 240, 34);
    containerMenu3.setVisible(false);
    menuBackground3.setXY(0, 0);
    menuBackground3.setBitmap(touchgfx::Bitmap(BITMAP_MENU_BUTTON_NORMAL_ID));
    containerMenu3.add(menuBackground3);

    textAreaMenu3.setPosition(60, 6, 120, 22);
    textAreaMenu3.setColor(touchgfx::Color::getColorFromRGB(150, 0, 4));
    textAreaMenu3.setLinespacing(0);
    textAreaMenu3.setTypedText(touchgfx::TypedText(T_MENU_SILENT));
    containerMenu3.add(textAreaMenu3);

    arrowMenu3.setXY(215, 9);
    arrowMenu3.setBitmap(touchgfx::Bitmap(BITMAP_MENU_ARROW_NORMAL_ID));
    arrowMenu3.setVisible(false);
    containerMenu3.add(arrowMenu3);

    iconMenu3.setXY(10, 9);
    iconMenu3.setBitmap(touchgfx::Bitmap(BITMAP_MENU_ICON_SILENT_ID));
    containerMenu3.add(iconMenu3);

    menu3FlexButton.setBoxWithBorderPosition(0, 0, 0, 0);
    menu3FlexButton.setBorderSize(5);
    menu3FlexButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    menu3FlexButton.setAction(flexButtonCallback);
    menu3FlexButton.setPosition(0, 0, 240, 34);
    containerMenu3.add(menu3FlexButton);

    add(containerMenu3);

    containerMenu4.setPosition(0, 125, 240, 34);
    containerMenu4.setVisible(false);
    menuBackground4.setXY(0, 0);
    menuBackground4.setBitmap(touchgfx::Bitmap(BITMAP_MENU_BUTTON_NORMAL_ID));
    containerMenu4.add(menuBackground4);

    textAreaMenu4.setPosition(60, 7, 120, 22);
    textAreaMenu4.setColor(touchgfx::Color::getColorFromRGB(150, 0, 4));
    textAreaMenu4.setLinespacing(0);
    textAreaMenu4.setTypedText(touchgfx::TypedText(T_MENU_FAN_ANGLE));
    textAreaMenu4.setAlpha(140);
    containerMenu4.add(textAreaMenu4);

    arrowMenu4.setXY(215, 8);
    arrowMenu4.setBitmap(touchgfx::Bitmap(BITMAP_MENU_ARROW_NORMAL_ID));
    arrowMenu4.setAlpha(160);
    arrowMenu4.setVisible(false);
    containerMenu4.add(arrowMenu4);

    iconMenu4.setXY(10, 8);
    iconMenu4.setBitmap(touchgfx::Bitmap(BITMAP_MENU_ICON_FAN_ANGLE_ID));
    iconMenu4.setAlpha(180);
    containerMenu4.add(iconMenu4);

    menu4FlexButton.setBoxWithBorderPosition(0, 0, 0, 0);
    menu4FlexButton.setBorderSize(5);
    menu4FlexButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    menu4FlexButton.setAction(flexButtonCallback);
    menu4FlexButton.setPosition(0, 0, 240, 34);
    containerMenu4.add(menu4FlexButton);

    add(containerMenu4);

    menuIconSelected.setXY(215, 202);
    menuIconSelected.setBitmap(touchgfx::Bitmap(BITMAP_SELECTED_ICONS_ID));
    menuIconSelected.setVisible(false);
    add(menuIconSelected);

    containerMenuDown.setPosition(89, 95, 58, 30);
    containerMenuDown.setVisible(false);
    menuTabDown.setXY(0, 0);
    menuTabDown.setBitmap(touchgfx::Bitmap(BITMAP_TAB_TOP_ID));
    containerMenuDown.add(menuTabDown);

    menuDownIcon.setXY(20, 8);
    menuDownIcon.setBitmap(touchgfx::Bitmap(BITMAP_ARROW_TAB_NORMAL_ID));
    containerMenuDown.add(menuDownIcon);

    menuDownFlexButton.setBoxWithBorderPosition(0, 0, 0, 0);
    menuDownFlexButton.setBorderSize(5);
    menuDownFlexButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    menuDownFlexButton.setBitmaps(Bitmap(BITMAP_ARRAOW_TAB_BUTTON_NORMAL_ID), Bitmap(BITMAP_ARRAOW_TAB_BUTTON_ACTIVE_ID));
    menuDownFlexButton.setBitmapXY(0, 0);
    menuDownFlexButton.setAction(flexButtonCallback);
    menuDownFlexButton.setPosition(0, 0, 58, 30);
    containerMenuDown.add(menuDownFlexButton);

    add(containerMenuDown);

    imagePlan.setXY(0, 60);
    imagePlan.setBitmap(touchgfx::Bitmap(BITMAP_DAY_PLAN_ID));
    imagePlan.setVisible(false);
    add(imagePlan);

    containerTopMenu.setPosition(0, 20, 240, 40);
    containerTopMenu.setVisible(false);
    backgroundTopMenu.setXY(0, 0);
    backgroundTopMenu.setBitmap(touchgfx::Bitmap(BITMAP_TOP_SECUNDARY_MENU_ID));
    containerTopMenu.add(backgroundTopMenu);

    textTopMenu.setPosition(72, 9, 105, 22);
    textTopMenu.setColor(touchgfx::Color::getColorFromRGB(255, 255, 215));
    textTopMenu.setLinespacing(0);
    textTopMenu.setTypedText(touchgfx::TypedText(T_TOP_MENU_DAY));
    containerTopMenu.add(textTopMenu);

    lineEditTopMenu.setXY(200, 36);
    lineEditTopMenu.setBitmap(touchgfx::Bitmap(BITMAP_SEC_MENU_MENULINE_NORMAL_ID));
    containerTopMenu.add(lineEditTopMenu);

    lineBackTopMenu.setXY(0, 36);
    lineBackTopMenu.setBitmap(touchgfx::Bitmap(BITMAP_SEC_MENU_MENULINE_NORMAL_ID));
    containerTopMenu.add(lineBackTopMenu);

    backgroundTopMenuButton.setXY(0, 0);
    backgroundTopMenuButton.setBitmap(touchgfx::Bitmap(BITMAP_SEC_MENU_MENULINE_ACTIVE_ID));
    backgroundTopMenuButton.setVisible(false);
    containerTopMenu.add(backgroundTopMenuButton);

    iconEditTopMenu.setXY(211, 11);
    iconEditTopMenu.setBitmap(touchgfx::Bitmap(BITMAP_EDIT_TOP_MENU_NORMAL_ID));
    iconEditTopMenu.setAlpha(140);
    containerTopMenu.add(iconEditTopMenu);

    iconBackTopMenu.setXY(11, 11);
    iconBackTopMenu.setBitmap(touchgfx::Bitmap(BITMAP_ARROW_GO_BACK_TOP_MENU_NORMAL_ID));
    containerTopMenu.add(iconBackTopMenu);

    backTopFlexButton.setBoxWithBorderPosition(0, 0, 0, 0);
    backTopFlexButton.setBorderSize(5);
    backTopFlexButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    backTopFlexButton.setAction(flexButtonCallback);
    backTopFlexButton.setPosition(0, 0, 40, 40);
    containerTopMenu.add(backTopFlexButton);

    editTopFlexButton.setBoxWithBorderPosition(0, 0, 0, 0);
    editTopFlexButton.setBorderSize(5);
    editTopFlexButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    editTopFlexButton.setAction(flexButtonCallback);
    editTopFlexButton.setPosition(200, 0, 40, 40);
    containerTopMenu.add(editTopFlexButton);

    add(containerTopMenu);

    containerIdleCircles.setPosition(10, 73, 220, 220);
    containerIdleCircles.setVisible(false);
    innerCircle.setPosition(0, 0, 220, 220);
    innerCircle.setCenter(110, 110);
    innerCircle.setRadius(93);
    innerCircle.setLineWidth(8);
    innerCircle.setArc(130, 310);
    innerCircle.setCapPrecision(10);
    innerCirclePainter.setColor(touchgfx::Color::getColorFromRGB(250, 206, 39));
    innerCircle.setPainter(innerCirclePainter);
    containerIdleCircles.add(innerCircle);

    outerCircle.setPosition(0, 0, 220, 220);
    outerCircle.setCenter(110, 110);
    outerCircle.setRadius(106);
    outerCircle.setLineWidth(8);
    outerCircle.setArc(-20, 160);
    outerCircle.setCapPrecision(10);
    outerCirclePainter.setColor(touchgfx::Color::getColorFromRGB(250, 206, 39));
    outerCircle.setPainter(outerCirclePainter);
    containerIdleCircles.add(outerCircle);

    add(containerIdleCircles);

    containerColorPicker.setPosition(0, 71, 240, 240);
    containerColorPicker.setVisible(false);
    imageColorPicker.setXY(16, 16);
    imageColorPicker.setBitmap(touchgfx::Bitmap(BITMAP_COLOR_PICKER_CIRCLE_ID));
    containerColorPicker.add(imageColorPicker);

    imageSelecterColorPicker.setXY(134, 35);
    imageSelecterColorPicker.setBitmap(touchgfx::Bitmap(BITMAP_COLORWHEEL_PICKER_ID));
    containerColorPicker.add(imageSelecterColorPicker);

    add(containerColorPicker);
}

MainViewBase::~MainViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void MainViewBase::setupScreen()
{

}

void MainViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &menuIconModeFlexButton)
    {
        //showMenuMode
        //When menuIconModeFlexButton clicked call virtual function
        //Call showMenuMode
        showMenuMode();
    }
    if (&src == &menuIconPlanFlexButton)
    {
        //showMenuPlan
        //When menuIconPlanFlexButton clicked call virtual function
        //Call showMenuPlan
        showMenuPlan();
    }
    if (&src == &menuIconTimerFlexButton)
    {
        //showMenuTimer
        //When menuIconTimerFlexButton clicked call virtual function
        //Call showMenuTimer
        showMenuTimer();
    }
    if (&src == &menuIconSetupFlexButton)
    {
        //showMenuSetup
        //When menuIconSetupFlexButton clicked call virtual function
        //Call showMenuSetup
        showMenuSetup();
    }
    if (&src == &arrowUpFlexButton)
    {
        //setUpTemperature
        //When arrowUpFlexButton clicked call virtual function
        //Call setUpTemperature
        setUpTemperature();
    }
    if (&src == &arrowDownFlexButton)
    {
        //setDownTemperature
        //When arrowDownFlexButton clicked call virtual function
        //Call setDownTemperature
        setDownTemperature();
    }
    if (&src == &menu1FlexButton)
    {
        //InteractionMenu1Clicked
        //When menu1FlexButton clicked call virtual function
        //Call menu1Clicked
        menu1Clicked();
    }
    if (&src == &menu2FlexButton)
    {
        //InteractionMenu2Clicked
        //When menu2FlexButton clicked call virtual function
        //Call menu2Clicked
        menu2Clicked();
    }
    if (&src == &menu3FlexButton)
    {
        //InteractionMenu3Clicked
        //When menu3FlexButton clicked call virtual function
        //Call menu3Clicked
        menu3Clicked();
    }
    if (&src == &menu4FlexButton)
    {
        //Interactionmenu4Clicked
        //When menu4FlexButton clicked call virtual function
        //Call menu4Clicked
        menu4Clicked();
    }
    if (&src == &menuDownFlexButton)
    {
        //buttonDownClicked
        //When menuDownFlexButton clicked call virtual function
        //Call buttonDownClicked
        buttonDownClicked();
    }
    if (&src == &backTopFlexButton)
    {
        //topBackButtonClicked
        //When backTopFlexButton clicked call virtual function
        //Call topBackButtonClicked
        topBackButtonClicked();
    }
    if (&src == &editTopFlexButton)
    {
        //topEditButtonClicked
        //When editTopFlexButton clicked call virtual function
        //Call topEditButtonClicked
        topEditButtonClicked();
    }
}

void MainViewBase::handleKeyEvent(uint8_t key)
{
    if(56 == key)
    {
        //InteractionUpKey
        //When hardware button 56 clicked call virtual function
        //Call upPressed
        upPressed();
    
    }

    if(50 == key)
    {
        //InteractionDownKey
        //When hardware button 50 clicked call virtual function
        //Call downPressed
        downPressed();
    
    }

    if(54 == key)
    {
        //InteractionRightKey
        //When hardware button 54 clicked call virtual function
        //Call rightPressed
        rightPressed();
    
    }

    if(52 == key)
    {
        //InteractionLeftKey
        //When hardware button 52 clicked call virtual function
        //Call leftPressed
        leftPressed();
    
    }

    if(53 == key)
    {
        //InteractionSelectKey
        //When hardware button 53 clicked call virtual function
        //Call selectPressed
        selectPressed();
    
    }
}
