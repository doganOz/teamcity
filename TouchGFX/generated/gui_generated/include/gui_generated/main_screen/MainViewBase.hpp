/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAINVIEWBASE_HPP
#define MAINVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/main_screen/MainPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/canvas/Circle.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/mixins/ClickListener.hpp>

class MainViewBase : public touchgfx::View<MainPresenter>
{
public:
    MainViewBase();
    virtual ~MainViewBase();
    virtual void setupScreen();
    virtual void handleKeyEvent(uint8_t key);

    /*
     * Virtual Action Handlers
     */
    virtual void upPressed()
    {
        // Override and implement this function in Main
    }
    virtual void downPressed()
    {
        // Override and implement this function in Main
    }
    virtual void rightPressed()
    {
        // Override and implement this function in Main
    }
    virtual void leftPressed()
    {
        // Override and implement this function in Main
    }
    virtual void selectPressed()
    {
        // Override and implement this function in Main
    }
    virtual void showMenuMode()
    {
        // Override and implement this function in Main
    }
    virtual void showMenuPlan()
    {
        // Override and implement this function in Main
    }
    virtual void showMenuTimer()
    {
        // Override and implement this function in Main
    }
    virtual void showMenuSetup()
    {
        // Override and implement this function in Main
    }
    virtual void setUpTemperature()
    {
        // Override and implement this function in Main
    }
    virtual void setDownTemperature()
    {
        // Override and implement this function in Main
    }
    virtual void menu1Clicked()
    {
        // Override and implement this function in Main
    }
    virtual void menu2Clicked()
    {
        // Override and implement this function in Main
    }
    virtual void menu3Clicked()
    {
        // Override and implement this function in Main
    }
    virtual void menu4Clicked()
    {
        // Override and implement this function in Main
    }
    virtual void buttonDownClicked()
    {
        // Override and implement this function in Main
    }
    virtual void topBackButtonClicked()
    {
        // Override and implement this function in Main
    }
    virtual void topEditButtonClicked()
    {
        // Override and implement this function in Main
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image main_bg;
    touchgfx::Image ornament_right;
    touchgfx::Image ornament_left;
    touchgfx::Image arrow_down;
    touchgfx::Image arrow_up;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  arrowDownFlexButton;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  arrowUpFlexButton;
    touchgfx::Image iconDegree;
    touchgfx::Container containerMainTopMenu;
    touchgfx::Image iconTimer;
    touchgfx::TextArea textTimer;
    touchgfx::Image iconBoost;
    touchgfx::TextArea textBoost;
    touchgfx::Image iconEco;
    touchgfx::TextArea textEco;
    touchgfx::Image iconSilent;
    touchgfx::TextArea textSilent;
    touchgfx::Image iconAngle;
    touchgfx::TextArea textAngle;
    touchgfx::Container containerBottomMenu;
    touchgfx::Image background_menu_bottom_mode;
    touchgfx::Image background_menu_bottom_plan;
    touchgfx::Image background_menu_bottom_timer;
    touchgfx::Image background_menu_bottom_setup;
    touchgfx::Image boxModeSelected;
    touchgfx::Image menuIconMode;
    touchgfx::Image menuIconPlan;
    touchgfx::Image menuIconTimer;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  menuIconSetupFlexButton;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  menuIconModeFlexButton;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  menuIconPlanFlexButton;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  menuIconTimerFlexButton;
    touchgfx::Image menuIconSetup;
    touchgfx::TextArea textAreaMode;
    touchgfx::TextArea textAreaPlan;
    touchgfx::TextArea textAreaTimer;
    touchgfx::TextArea textAreaSetup;
    touchgfx::Image menuDivider_1;
    touchgfx::Image menuDivider_2;
    touchgfx::Image menuDivider_3;
    touchgfx::Container containerSetTemperature;
    touchgfx::TextAreaWithOneWildcard textAreaShadowSetTemperature;
    touchgfx::TextAreaWithOneWildcard textAreaSetTemperature;
    touchgfx::Container containerMenu1;
    touchgfx::Image menuBackground1;
    touchgfx::TextArea textAreaMenu1;
    touchgfx::Image arrowMenu1;
    touchgfx::Image iconMenu1;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  menu1FlexButton;
    touchgfx::Container containerMenu2;
    touchgfx::Image menuBackground2;
    touchgfx::TextArea textAreaMenu2;
    touchgfx::Image arrowMenu2;
    touchgfx::Image iconMenu2;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  menu2FlexButton;
    touchgfx::Container containerMenu3;
    touchgfx::Image menuBackground3;
    touchgfx::TextArea textAreaMenu3;
    touchgfx::Image arrowMenu3;
    touchgfx::Image iconMenu3;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  menu3FlexButton;
    touchgfx::Container containerMenu4;
    touchgfx::Image menuBackground4;
    touchgfx::TextArea textAreaMenu4;
    touchgfx::Image arrowMenu4;
    touchgfx::Image iconMenu4;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  menu4FlexButton;
    touchgfx::Image menuIconSelected;
    touchgfx::Container containerMenuDown;
    touchgfx::Image menuTabDown;
    touchgfx::Image menuDownIcon;
    touchgfx::ImageButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  menuDownFlexButton;
    touchgfx::Image imagePlan;
    touchgfx::Container containerTopMenu;
    touchgfx::Image backgroundTopMenu;
    touchgfx::TextArea textTopMenu;
    touchgfx::Image lineEditTopMenu;
    touchgfx::Image lineBackTopMenu;
    touchgfx::Image backgroundTopMenuButton;
    touchgfx::Image iconEditTopMenu;
    touchgfx::Image iconBackTopMenu;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  backTopFlexButton;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  editTopFlexButton;
    touchgfx::Container containerIdleCircles;
    touchgfx::Circle innerCircle;
    touchgfx::PainterRGB565 innerCirclePainter;
    touchgfx::Circle outerCircle;
    touchgfx::PainterRGB565 outerCirclePainter;
    touchgfx::Container containerColorPicker;
    touchgfx::ClickListener< touchgfx::Image > imageColorPicker;
    touchgfx::Image imageSelecterColorPicker;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREASHADOWSETTEMPERATURE_SIZE = 3;
    touchgfx::Unicode::UnicodeChar textAreaShadowSetTemperatureBuffer[TEXTAREASHADOWSETTEMPERATURE_SIZE];
    static const uint16_t TEXTAREASETTEMPERATURE_SIZE = 3;
    touchgfx::Unicode::UnicodeChar textAreaSetTemperatureBuffer[TEXTAREASETTEMPERATURE_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 3600;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<MainViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // MAINVIEWBASE_HPP
